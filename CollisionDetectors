using System;

namespace CollisionManager
{
    class CheckPositions
    {
        public static bool Check_position(int[][] level, (int, int)[] shape, int direction_x, int direction_y, int check_for)
        {
            foreach ((int, int) position in shape)
            {
                int posx = position.Item1;
                int posy = position.Item2;
                if (posy + (direction_y) < level[posx].Length && level[posx][posy + (direction_y)] == check_for)
                {
                    if (!shape.Contains((posx, posy + direction_y)))
                    {
                        return true;
                    }
                }
                if (posx + (direction_x) < level.Length && level[posx + (direction_x)][posy] == check_for)
                {
                    if (!shape.Contains((posx, posy + direction_x)))
                    { 
                        return true;
                    }
                }
            }
            return false;
        }
    }
    // To be changed.
    class BorderCollision
    {
        public string Disappear_object(int[][] level, int posx, string obj_type)
        {
            if (posx + 1 == level.Length && obj_type == "car")
            {
                return "disappearing_car_1";
            }
            else if (posx + 1 == level.Length && obj_type == "disappearing_car_1")
            {
                return "disappearing_car_2";
            }
            else
            {
                return obj_type;
            }
        }
    }

}
